CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(IK_ID_RT)

SET(BOOST_MIN_VERSION "1.48.0")

SET(XSENS OFF)
SET(EMG ON)

#TODO install lib in CEINMS-RT

#TODO
#SET(USE_GUI ON)
#SET(FORCEQT5 OFF)

IF(EMG)
	#Update this path to your configuration
	SET(EMG_DIR ${CMAKE_SOURCE_DIR}/../OT/)
ENDIF()

IF(XSENS)
	#Update this path to your configuration
	SET(XSENS_DIR ${CMAKE_SOURCE_DIR}/../../XsensDriver)
ENDIF()


IF(NOT ENV{OPENSIM_HOME})
	MESSAGE("/!\\ OPENSIM_HOME not set /!\\ You must set OPENSIM_HOME")
ELSE()
	SET(OPENSIM_INSTALL_DIR $ENV{OPENSIM_HOME} 
		CACHE PATH "Top-level directory of OpenSim install")
ENDIF()

IF(NOT ENV{OPENSIM_HOME} AND UNIX)
	SET(OPENSIM_INSTALL_DIR /usr/local)
ENDIF()

add_definitions(-DBOOST_DATE_TIME_POSIX_TIME_STD_CONFIG)
SET(CMAKE_BUILD_TYPE Debug)
SET(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(CMAKE_CXX_FLAGS ${CMAKE_CSS_FLAGS} "-fPIC")
SET(CMAKE_SHARED_LINKER_FLAGS "-Wl,--no-undefined")
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR})
SET(LIBRARY_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/lib)
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin)
SET(CMAKE_AUTOMOC ON)
SET(CMAKE_AUTOUIC ON)

SET(OPENSIM_HEADERS_DIR ${OPENSIM_INSTALL_DIR}/sdk/include)
SET(OPENSIM_LIBS_DIR ${OPENSIM_INSTALL_DIR}/lib)
SET(OPENSIM_DLLS_DIR ${OPENSIM_INSTALL_DIR}/bin)
SET(SIMTK_HEADERS_DIR ${OPENSIM_INSTALL_DIR}/simbody/include)


INCLUDE_DIRECTORIES(${CEINMS_FILEIO})

INCLUDE_DIRECTORIES(
	${SIMTK_HEADERS_DIR} 
	${OPENSIM_HEADERS_DIR}
  	${CMAKE_SOURCE_DIR}/include
  	${CMAKE_SOURCE_DIR}/include/QualisysSocket
  	${CMAKE_SOURCE_DIR}/src
  	${CMAKE_SOURCE_DIR}/src/executable/
  	${CMAKE_SOURCE_DIR}/src/plugin
  	${CMAKE_SOURCE_DIR}/src/QualisysSocket
#   /usr/local/sdk/inlude
  	${CMAKE_SOURCE_DIR}/gui
  	${CMAKE_SOURCE_DIR}/gui/opengl
  	${CMAKE_SOURCE_DIR}/build/include
  	${CMAKE_SOURCE_DIR}/build/include/QualisysSocket
  	${CMAKE_SOURCE_DIR}/build/src
  	${CMAKE_SOURCE_DIR}/build/src/QualisysSocket
  	${CMAKE_SOURCE_DIR}/build/gui
  	${CMAKE_SOURCE_DIR}/build/gui/opengl
)

IF(EMG)
	INCLUDE_DIRECTORIES(
		${EMG_DIR}/include
		${EMG_DIR}/src
	)
	LINK_DIRECTORIES(${EMG_DIR}/lib)
ENDIF()

IF(XSENS)
	INCLUDE_DIRECTORIES(
		${XSENS_DIR}/include
		${XSENS_DIR}/include/xsens
	)
	LINK_DIRECTORIES(${XSENS_DIR}/lib)
ENDIF()

LINK_DIRECTORIES(
	${OPENSIM_LIBS_DIR}
	${OPENSIM_DLLS_DIR}
	${CMAKE_SOURCE_DIR}/lib
)


FIND_PACKAGE(Qt4 REQUIRED QtCore QtGui QtOpenGL)

INCLUDE(${QT_USE_FILE})

FIND_PACKAGE(OpenGL REQUIRED)

FIND_PACKAGE(Threads)

FIND_PACKAGE(Boost ${BOOST_MIN_VERSION} COMPONENTS timer filesystem program_options thread system REQUIRED)
LINK_DIRECTORIES( ${Boost_LIBRARY_DIRS} )
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})

FIND_PACKAGE(XSD REQUIRED)
INCLUDE_DIRECTORIES(${XSD_INCLUDE_DIR})

FIND_PACKAGE(XERCES REQUIRED)
INCLUDE_DIRECTORIES(${XERCES_INCLUDE_DIR})


ADD_SUBDIRECTORY(gui)
ADD_SUBDIRECTORY(src)
